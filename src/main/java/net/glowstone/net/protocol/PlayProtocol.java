package net.glowstone.net.protocol;

import net.glowstone.net.codec.KickCodec;
import net.glowstone.net.codec.play.entity.*;
import net.glowstone.net.codec.play.game.*;
import net.glowstone.net.codec.play.inv.*;
import net.glowstone.net.codec.play.player.*;
import net.glowstone.net.codec.play.scoreboard.ScoreboardDisplayCodec;
import net.glowstone.net.codec.play.scoreboard.ScoreboardObjectiveCodec;
import net.glowstone.net.codec.play.scoreboard.ScoreboardScoreCodec;
import net.glowstone.net.codec.play.scoreboard.ScoreboardTeamCodec;
import net.glowstone.net.handler.play.game.*;
import net.glowstone.net.handler.play.inv.*;
import net.glowstone.net.handler.play.player.*;
import net.glowstone.net.message.KickPacket;
import net.glowstone.net.message.play.entity.*;
import net.glowstone.net.message.play.game.*;
import net.glowstone.net.message.play.inv.*;
import net.glowstone.net.message.play.player.*;
import net.glowstone.net.message.play.scoreboard.ScoreboardDisplayPacket;
import net.glowstone.net.message.play.scoreboard.ScoreboardObjectivePacket;
import net.glowstone.net.message.play.scoreboard.ScoreboardScorePacket;
import net.glowstone.net.message.play.scoreboard.ScoreboardTeamPacket;

public class PlayProtocol extends GlowProtocol {
    public PlayProtocol() {
        super("PLAY", 0x4B);

        inbound(0x00, TeleportConfirmPacket.class, TeleportConfirmCodec.class, TeleportConfirmHandler.class);
        inbound(0x01, TabCompletePacket.class, TabCompleteCodec.class, TabCompleteHandler.class);
        inbound(0x02, InboundChatPacket.class, IncomingChatCodec.class, IncomingChatHandler.class);
        inbound(0x03, ClientStatusPacket.class, ClientStatusCodec.class, ClientStatusHandler.class);
        inbound(0x04, ClientSettingsPacket.class, ClientSettingsCodec.class, ClientSettingsHandler.class);
        inbound(0x05, TransactionPacket.class, TransactionCodec.class, TransactionHandler.class);
        inbound(0x06, EnchantItemPacket.class, EnchantItemCodec.class, EnchantItemHandler.class);
        inbound(0x07, WindowClickPacket.class, WindowClickCodec.class, WindowClickHandler.class);
        inbound(0x08, WindowClosePacket.class, CloseWindowCodec.class, CloseWindowHandler.class);
        inbound(0x09, PluginLoadPacket.class, PluginMessageCodec.class, PluginMessageHandler.class);
        inbound(0x0A, InteractEntityPacket.class, InteractEntityCodec.class, InteractEntityHandler.class);
        inbound(0x0B, PingPacket.class, PingCodec.class, PingHandler.class);
        inbound(0x0C, PlayerPositionPacket.class, PlayerPositionCodec.class, PlayerUpdateHandler.class);
        inbound(0x0D, PlayerPositionLookPacket.class, PlayerPositionLookCodec.class, PlayerUpdateHandler.class);
        inbound(0x0E, PlayerLookPacket.class, PlayerLookCodec.class, PlayerUpdateHandler.class);
        inbound(0x0F, PlayerUpdatePacket.class, PlayerUpdateCodec.class, PlayerUpdateHandler.class);
        inbound(0x10, VehicleMovePacket.class, VehicleMoveCodec.class, VehicleMoveHandler.class);
        //0x11 : Steer boat
        inbound(0x12, PlayerAbilitiesPacket.class, PlayerAbilitiesCodec.class, PlayerAbilitiesHandler.class);
        inbound(0x13, BlockDigPacket.class, DiggingCodec.class, DiggingHandler.class);
        inbound(0x14, PlayerActionPacket.class, PlayerActionCodec.class, PlayerActionHandler.class);
        inbound(0x15, SteerVehiclePacket.class, SteerVehicleCodec.class, SteerVehicleHandler.class);
        inbound(0x16, ResourcePackStatusPacket.class, ResourcePackStatusCodec.class, ResourcePackStatusHandler.class);
        inbound(0x17, HeldItemPacket.class, HeldItemCodec.class, HeldItemHandler.class);
        inbound(0x18, CreativeItemPacket.class, CreativeItemCodec.class, CreativeItemHandler.class);
        inbound(0x19, UpdateSignPacket.class, UpdateSignCodec.class, UpdateSignHandler.class);
        inbound(0x1A, PlayerSwingArmPacket.class, PlayerSwingArmCodec.class, PlayerSwingArmHandler.class);
        inbound(0x1B, SpectatePacket.class, SpectateCodec.class, SpectateHandler.class);
        inbound(0x1C, BlockPlacePacket.class, BlockPlacementCodec.class, BlockPlacementHandler.class);
        inbound(0x1D, UseItemPacket.class, UseItemCodec.class, UseItemHandler.class);

        outbound(0x00, SpawnObjectPacket.class, SpawnObjectCodec.class);
        outbound(0x01, SpawnXpOrbPacket.class, SpawnXpOrbCodec.class);
        outbound(0x02, SpawnLightningPacket.class, SpawnLightningStrikeCodec.class);
        outbound(0x03, SpawnMobPacket.class, SpawnMobCodec.class);
        outbound(0x04, SpawnPaintingPacket.class, SpawnPaintingCodec.class);
        outbound(0x05, SpawnPlayerPacket.class, SpawnPlayerCodec.class);
        outbound(0x06, EntityAnimationPacket.class, AnimateEntityCodec.class);
        outbound(0x07, StatisticPacket.class, StatisticCodec.class);
        //TODO 0x08 : Block break animation
        outbound(0x09, UpdateBlockEntityPacket.class, UpdateBlockEntityCodec.class);
        outbound(0x0A, BlockActionPacket.class, BlockActionCodec.class);
        outbound(0x0B, BlockChangePacket.class, BlockChangeCodec.class);
        outbound(0x0C, BossBarPacket.class, BossBarCodec.class);
        outbound(0x0D, ServerDifficultyPacket.class, ServerDifficultyCodec.class);
        outbound(0x0E, TabCompleteResponsePacket.class, TabCompleteResponseCodec.class);
        outbound(0x0F, OutboundChatPacket.class, ChatCodec.class);
        outbound(0x10, MultiBlockChangePacket.class, MultiBlockChangeCodec.class);
        outbound(0x11, TransactionPacket.class, TransactionCodec.class);
        outbound(0x12, WindowClosePacket.class, CloseWindowCodec.class);
        outbound(0x13, WindowOpenPacket.class, OpenWindowCodec.class);
        outbound(0x14, WindowContentPacket.class, SetWindowContentsCodec.class);
        outbound(0x15, WindowPropertyPacket.class, WindowPropertyCodec.class);
        outbound(0x16, WindowSlotPacket.class, SetWindowSlotCodec.class);
        outbound(0x17, CooldownPacket.class, SetCooldownCodec.class);
        outbound(0x18, PluginLoadPacket.class, PluginMessageCodec.class);
        outbound(0x19, NamedSoundEffectPacket.class, NamedSoundEffectCodec.class);
        outbound(0x1A, KickPacket.class, KickCodec.class);
        outbound(0x1B, EntityStatusPacket.class, EntityStatusCodec.class);
        outbound(0x1C, ExplosionPacket.class, ExplosionCodec.class);
        outbound(0x1D, UnloadChunkPacket.class, UnloadChunkCodec.class);
        outbound(0x1E, StateChangePacket.class, StateChangeCodec.class);
        outbound(0x1F, PingPacket.class, PingCodec.class);
        outbound(0x20, ChunkDataPacket.class, ChunkDataCodec.class);
        outbound(0x21, PlayEffectPacket.class, PlayEffectCodec.class);
        outbound(0x22, PlayParticlePacket.class, PlayParticleCodec.class);
        outbound(0x23, JoinGamePacket.class, JoinGameCodec.class);
        outbound(0x24, MapDataPacket.class, MapDataCodec.class);
        outbound(0x25, RelativeEntityPositionPacket.class, RelativeEntityPositionCodec.class);
        outbound(0x26, RelativeEntityPositionRotationPacket.class, RelativeEntityPositionRotationCodec.class);
        outbound(0x27, EntityRotationPacket.class, EntityRotationCodec.class);
        //TODO 0x28: Entity packet.
        outbound(0x29, VehicleMovePacket.class, VehicleMoveCodec.class);
        outbound(0x2A, SignEditorPacket.class, SignEditorCodec.class);
        outbound(0x2B, PlayerAbilitiesPacket.class, PlayerAbilitiesCodec.class);
        outbound(0x2C, CombatPacket.class, CombatEventCodec.class);
        outbound(0x2D, PlayerListItemPacket.class, UserListItemCodec.class);
        outbound(0x2E, PositionRotationPacket.class, PositionRotationCodec.class);
        outbound(0x2F, UseBedPacket.class, UseBedCodec.class);
        outbound(0x30, DestroyEntitiesPacket.class, DestroyEntitiesCodec.class);
        outbound(0x31, EntityRemoveEffectPacket.class, EntityRemoveEffectCodec.class);
        outbound(0x32, ResourcePackSendPacket.class, ResourcePackSendCodec.class);
        outbound(0x33, RespawnPacket.class, RespawnCodec.class);
        outbound(0x34, EntityHeadRotationPacket.class, EntityHeadRotationCodec.class);
        outbound(0x35, WorldBorderPacket.class, WorldBorderCodec.class);
        outbound(0x36, CameraPacket.class, CameraCodec.class);
        outbound(0x37, HeldItemPacket.class, HeldItemCodec.class);
        outbound(0x38, ScoreboardDisplayPacket.class, ScoreboardDisplayCodec.class);
        outbound(0x39, EntityMetadataPacket.class, EntityMetadataCodec.class);
        outbound(0x3A, AttachEntityPacket.class, AttachEntityCodec.class);
        outbound(0x3B, EntityVelocityPacket.class, EntityVelocityCodec.class);
        outbound(0x3C, EntityEquipmentPacket.class, EntityEquipmentCodec.class);
        outbound(0x3D, ExperiencePacket.class, ExperienceCodec.class);
        outbound(0x3E, HealthPacket.class, HealthCodec.class);
        outbound(0x3F, ScoreboardObjectivePacket.class, ScoreboardObjectiveCodec.class);
        outbound(0x40, PassengerPacket.class, SetPassengerCodec.class);
        outbound(0x41, ScoreboardTeamPacket.class, ScoreboardTeamCodec.class);
        outbound(0x42, ScoreboardScorePacket.class, ScoreboardScoreCodec.class);
        outbound(0x43, SpawnPositionPacket.class, SpawnPositionCodec.class);
        outbound(0x44, TimePacket.class, TimeCodec.class);
        outbound(0x45, TitlePacket.class, TitleCodec.class);
        outbound(0x46, SoundEffectPacket.class, SoundEffectCodec.class);
        outbound(0x47, PlayerListHeaderFooterPacket.class, UserListHeaderFooterCodec.class);
        outbound(0x48, CollectItemPacket.class, CollectItemCodec.class);
        outbound(0x49, EntityTeleportPacket.class, EntityTeleportCodec.class);
        outbound(0x4A, EntityPropertyPacket.class, EntityPropertyCodec.class);
        outbound(0x4B, EntityEffectPacket.class, EntityEffectCodec.class);
    }
}
